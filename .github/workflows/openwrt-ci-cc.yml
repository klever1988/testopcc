# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI with ccache

on:
  workflow_dispatch:
    inputs:
      runner:
        description: 'select runner'
        default: 'ubuntu-18.04'
        required: false
      devices:
        description: 'build devices'
        default: '["x86", "r2s"]'


  schedule:
    - cron: 0 20 * * *
  watch:
    types: [started]

jobs:

  build_openwrt:
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        device: ${{fromJSON(github.event.inputs.devices)}}

    name: Build OpenWrt firmware

    runs-on: ${{ github.event.inputs.runner }}

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'immortalwrt/immortalwrt'
          ref: master
          fetch-depth: 0

      - name: cache
        uses: klever1988/hello-world-javascript-action@test
        with:
          ccache: 'true'
          toolchain: 'true'
          skip: 'false'

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          nohup sh -c 'sudo -E apt-get update
          sudo -E apt-get -y --no-upgrade install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          docker rmi `docker images -q`
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean' &

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          svn export https://github.com/openwrt/luci/branches/openwrt-18.06 luci
          echo > more_luci.txt
          cd luci
          ls -d */ | xargs -n1 -i diff -q {} ../feeds/luci/{} | grep Only | grep feeds | grep -E applications\|themes | awk '{print $4}' | xargs -n1 -i echo CONFIG_PACKAGE_{}=m >> ../more_luci.txt

      - name: Generate configuration file
        run: |
          svn export https://github.com/klever1988/testopcc/trunk . --force
          cp ${{matrix.device}}.config.seed .config
          make defconfig
          sed '/INCLUDE/!s/\(CONFIG_PACKAGE_luci-app-.*\)=y/# \1 is not set/' .config | grep CONFIG_PACKAGE_luci-app | grep -v INCLUDE > t.seed
          #cat ${{matrix.device}}.config.seed t.seed > .config
          echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config
          find package/ -type d -name luci-app-* | rev | cut -d'/' -f1 | rev | xargs -n1 -i echo CONFIG_PACKAGE_{}=m >> .config
          cat more_luci.txt >> .config
          make defconfig
          cat .config

      - name: Make download
        run: |
          while true; do make download -j && break || true; done
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$[`nproc`+1]
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
